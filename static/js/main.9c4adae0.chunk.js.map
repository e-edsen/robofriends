{"version":3,"sources":["reportWebVitals.js","components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Card","id","name","email","className","alt","src","CardList","robots","cardArray","map","user","i","username","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflow","border","height","children","ErrorBoundry","state","hasError","this","setState","Component","App","onSearchChange","event","target","value","document","title","fetch","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","ReactDOM","render","getElementById"],"mappings":"uLAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,2CCUCQ,EAfF,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,GAAIC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,MAErB,OACI,cAAC,WAAD,UACI,sBAAKC,UAAU,sDAAf,UACI,qBAAKC,IAAI,YAAYC,IAAG,+BAA0BL,EAA1B,mBACxB,gCACI,6BAAKC,IACL,4BAAIC,aCYTI,EAnBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACVC,EAAYD,EAAOE,KAAI,SAACC,EAAMC,GAChC,OACA,cAAC,EAAD,CAEIX,GAAIO,EAAOI,GAAGX,GACdC,KAAMM,EAAOI,GAAGV,KAChBC,MAAOK,EAAOI,GAAGT,OAHZK,EAAOI,GAAGC,aAQvB,OACI,8BACKJ,KCNEK,EATG,SAAC,GAAkC,EAAhCC,YAAiC,IAApBC,EAAmB,EAAnBA,aAC9B,OACI,qBAAKZ,UAAU,MAAf,SACI,uBAAOA,UAAU,mCAAmCa,KAAK,SAASC,YAAY,eAC9EC,SAAUH,OCIPI,EARA,SAACC,GACZ,OACI,qBAAKC,MAAO,CAACC,SAAU,SAAUC,OAAQ,kBAAmBC,OAAQ,SAApE,SACKJ,EAAMK,YCkBJC,E,kDApBX,WAAYN,GAAO,IAAD,8BACd,cAAMA,IACDO,MAAQ,CACTC,UAAU,GAHA,E,qDAOlB,WACIC,KAAKC,SAAS,CAAEF,UAAU,M,oBAG9B,WACI,OAAIC,KAAKF,MAAMC,SACP,0EAEDC,KAAKT,MAAMK,a,GAhBCM,aC8CZC,G,wDAxCX,aAAc,IAAD,8BACT,gBAcJC,eAAiB,SAACC,GACd,EAAKJ,SAAS,CAAEhB,YAAaoB,EAAMC,OAAOC,SAd1C,EAAKT,MAAQ,CACTpB,OAAQ,GACRO,YAAa,IAJR,E,qDAQb,WAAoB,IAAD,OACfuB,SAASC,MAAQ,cACjBC,MAAM,8CACL9C,MAAK,SAAA+C,GAAQ,OAAIA,EAASC,UAC1BhD,MAAK,SAAAiD,GAAK,OAAG,EAAKZ,SAAS,CAAEvB,OAAQmC,S,oBAO1C,WACI,MAA8Bb,KAAKF,MAA5BpB,EAAP,EAAOA,OAAQO,EAAf,EAAeA,YACT6B,EAAiBpC,EAAOqC,QAAO,SAAAC,GACjC,OAAOA,EAAM5C,KAAK6C,cAAcC,SAASjC,EAAYgC,kBAEzD,OAAQvC,EAAOyC,OAGX,sBAAK7C,UAAU,KAAf,UACI,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWY,aAAcc,KAAKI,iBAC9B,cAAC,EAAD,UACI,cAAC,EAAD,UACI,cAAC,EAAD,CAAU1B,OAAQoC,WAPlC,oBAAIxC,UAAU,QAAd,4B,GA1BU4B,cCAlBkB,IAASC,OAAO,cAAC,EAAD,IAASb,SAASc,eAAe,SAKjD7D,M","file":"static/js/main.9c4adae0.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, {Fragment} from 'react';\r\n\r\nconst Card = ({id, name, email}) => {\r\n    /* const {id, name, email} = props; */\r\n    return (\r\n        <Fragment>\r\n            <div className=\"tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\">\r\n                <img alt=\"cardPhoto\" src={`https://robohash.org/${id}?size=200x200`}/>\r\n                <div>\r\n                    <h2>{name}</h2>\r\n                    <p>{email}</p>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({ robots }) => {\r\n    const cardArray = robots.map((user, i) => {\r\n        return (\r\n        <Card\r\n            key={robots[i].username}\r\n            id={robots[i].id}\r\n            name={robots[i].name}\r\n            email={robots[i].email} \r\n            />\r\n        );\r\n    })\r\n\r\n    return(\r\n        <div>\r\n            {cardArray}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({ searchfield, searchChange }) => {\r\n    return (\r\n        <div className='pa2'>\r\n            <input className='pa3 ba b--green bg-lightest-blue' type='search' placeholder='Search Robot' \r\n            onChange={searchChange} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n    return(\r\n        <div style={{overflow: 'scroll', border: '1px solid black', height: '800px'}}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Scroll;","import React, { Component, } from 'react';\r\n\r\nclass ErrorBoundry extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            hasError: false\r\n        }   \r\n    }\r\n\r\n    componentDidCatch(){\r\n        this.setState({ hasError: true });\r\n    }\r\n\r\n    render(){\r\n        if (this.state.hasError)\r\n         return <h1>Oooops. Something went absolutely wrong.</h1>\r\n\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\n\r\nexport default ErrorBoundry;","import React, { Component } from 'react';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll';\r\nimport ErrorBoundry from '../components/ErrorBoundry';\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            robots: [],\r\n            searchfield: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        document.title = \"robofriends\"\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then(response => response.json())\r\n        .then(users =>this.setState({ robots: users}))\r\n    }\r\n\r\n    onSearchChange = (event) => {\r\n        this.setState({ searchfield: event.target.value });\r\n    }\r\n\r\n    render() {\r\n        const {robots, searchfield} = this.state;\r\n        const filteredRobots = robots.filter(robot => {\r\n            return robot.name.toLowerCase().includes(searchfield.toLowerCase());\r\n        })\r\n        return !robots.length ?\r\n        <h1 className=\"tc f1\">Loading...</h1> :\r\n        (\r\n            <div className='tc'>\r\n                <h1 className='f1'>RoboFriends</h1>\r\n                <SearchBox searchChange={this.onSearchChange}/>\r\n                <Scroll>\r\n                    <ErrorBoundry> \r\n                        <CardList robots={filteredRobots} />\r\n                    </ErrorBoundry>\r\n                </Scroll>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\nimport App from './containers/App';\n\nReactDOM.render(<App /> ,document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}